# This file is managed by Salt - it's advised that you don't edit it.

input {

  file {
    path => "/var/log/sanitisePathsSysLogs/failed.txt"
    type => "sanitisePaths_log"
    tags => "failed"
  }

  file {
    path => "/var/log/sanitisePathsSysLogs/removed.txt"
    type => "sanitisePaths_log"
    tags => "removed"
  }

  file {
    path => "/var/log/sanitisePathsSysLogs/renamed.txt"
    type => "sanitisePaths_log"
    tags => "renamed"
  }

  file {
    path => "/var/log/sanitisePathsSysLogs/there_and_different.txt"
    type => "sanitisePaths_log"
    tags => "there_and_different"
  }

  file {
    path => "/var/log/sanitisePathsSysLogs/there_but_same.txt"
    type => "sanitisePaths_log"
    tags => "there_but_same"
  }

  file {
    path => "/var/log/sanitisePathsSysLogs/transfer_errors.txt"
    type => "sanitisePaths_log"
    tags => "transfer_errors"
  }

  file {
    path => "/var/log/sanitisePathsSysLogs/transferred.txt"
    type => "sanitisePaths_log"
    tags => "transferred"
  }

}

filter {

  if "failed" in [tags] {
    mutate {
      add_field => { "operation" => "An error occurred while transferring this file" }
      rename => [ "message", "file" ] 
    } 
  }

  else if "removed" in [tags] {
    mutate {
      add_field => { "operation" => "File was deleted from source" }
      rename => [ "message", "file" ] 
    }
  }
 
  else if "renamed" in [tags] {
    grok {
      match => [ "message", "{Changed from: }%{GREEDYDATA:Changed_from}{to: }%{GREEDYDATA:Changed_to}" ]
    }
    mutate {
      remove_field => [ "message" ] 
      add_field => { "operation" => "File renamed" }
    }
  }

  else if "there_and_different" in [tags] {
    mutate {
      add_field => { "operation" => "File exists in destination with a different size or modification time, so was not transferred." }
      rename => [ "message", "file" ] 
    }
  }

  else if "there_but_same" in [tags] {
    mutate {
      add_field => { "operation" => "A file identical to that on the source already exists in the destination. The file was not moved." }
      rename => [ "message", "file" ] 
    }
  }

  else if "transfer_errors" in [tags] {
    grok { 
      match => [ "message", "{MovedTo:}%{GREEDYDATA:Moved_to}" ]
    }  
    mutate {
      remove_field => [ "message" ] 
      add_field => { "operation" => "Files failed to copy" }
    }
  }

  else if "transferred" in [tags] {
    mutate {
      add_field => { "operation" => "File transferred successfully" }
      rename => [ "message", "file" ] 
    }
  } 

  mutate {
    remove_field => [ "path", "@version" ]
  }
}

output {
  stdout { codec => rubydebug }
  redis { host => "ixllvmva32.hogarthww.prv" data_type => "list" key => "logstash" }
}
